//
//  NewsItemGenerator.swift
//  SilverFox-gen
//
//  Created by Louis D'hauwe on 28/05/2017.
//
//

import Foundation
import SwiftMarkdown
import Files

extension NewsItem {
	
	var tileHtml: String {
		
		let html = """
		<!-- Auto generated by Silver Fox Gen -->
		<a href="\(link)">
			<div class="tile newsitem">
				<span class="newsitem-wrapper">
					<h3>\(title)</h3>
					<p class="newsitem-metadata-date">\(formattedDate)</p>
					<p class="newsitem-metadata-author">by \(author)</p>
				</span>
				<div>
					<p>Read</p>
				</div>
			</div>
		</a>
		"""
		
		return html
	}
	
}

extension NewsItem {
	
	init?(file: File) throws {
		
		let fileName = file.name
		
		print("Starting \(fileName) generating ...")
		
		let dateFormat = "yyyy-MM-dd"
		
		guard fileName.count > dateFormat.count else {
			runtimeError("Invalid date format in \(file.name) file name, please provide in format: \"\(dateFormat)\"")
		}
		
		let dateEndIndex = fileName.index(fileName.startIndex, offsetBy: dateFormat.count)
		let dateString = String(fileName[..<dateEndIndex])
		
		let formatter = DateFormatter()
		formatter.dateFormat = dateFormat
		
		guard let date = formatter.date(from: dateString) else {
			runtimeError("Invalid date format in \(file.name) file name, please provide in format: \"\(dateFormat)\"")
		}
		
		let markdown = try file.readAsString()
		
		guard markdown.hasPrefix("---") else {
			runtimeError("Make sure to add \"---\" info at the top of \(file.name)")
		}
		
		guard let infoSlice = markdown.slice(from: "---", to: "---") else {
			runtimeError("Make sure to add \"---\" info at the top of \(file.name)")
		}
		
		let articleInfos = infoSlice.components(separatedBy: "\n")
		
		guard let infoDict = articleInfos.dictionary(separatedBy: ": ") else {
			runtimeError("Could not initialize \(file.nameExcludingExtension)")
		}
		
		self.init(infoDict: infoDict, date: date)
		
	}
	
}
